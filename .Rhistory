phys_altered_flow_data = phys_altered_flow_data[X2.2.Subtype == "snow melt runoff", X2.2.Subtype := "glacial and snow melt"]
#drop wind and current
phys_altered_flow_data = phys_altered_flow_data[X2.2.Subtype != "wind",]
phys_altered_flow_data = phys_altered_flow_data[X2.2.Subtype != "ocean current",]
physalter <- ggplot(phys_altered_flow_data, aes(x = altered_flow, fill = alteration)) +
geom_bar(position= "stack") +
coord_flip() +
facet_wrap(~X2.1.Flow.Type, scales = "fixed") +
theme_minimal() +
scale_fill_manual(values = c("Increase" = "dodgerblue3", "Decrease" = "deeppink3", "Complex change" = "goldenrod1")) +
labs(
title = "Changes to Physical Flows",
x = "Changes to Flow",
size = "Count",
fill = "Impact Direction")
physalter
physalter + facet_wrap(~X2.2.Subtype)
# do for human
#do for just human
humanalter <- ggplot(altered_flow_data[X2.1.Flow.Type == "Human movement",], aes(x = altered_flow, fill = alteration)) +
geom_bar(position= "stack") +
coord_flip() +
facet_wrap(~X2.1.Flow.Type, scales = "fixed") +
theme_minimal() +
scale_fill_manual(values = c("Increase" = "dodgerblue3", "Decrease" = "deeppink3", "Complex change" = "goldenrod1")) +
labs(
title = "Changes to Human movement Flows",
x = "Changes to Flow",
size = "Count",
fill = "Impact Direction")
humanalter
humanalter + facet_wrap(~X2.2.Subtype)
#do for just socio
socioalter <- ggplot(altered_flow_data[X2.1.Flow.Type == "Sociocultural",], aes(x = altered_flow, fill = alteration)) +
geom_bar(position= "stack") +
coord_flip() +
facet_wrap(~X2.1.Flow.Type, scales = "fixed") +
theme_minimal() +
scale_fill_manual(values = c("Increase" = "dodgerblue3", "Decrease" = "deeppink3", "Complex change" = "goldenrod1")) +
labs(
title = "Changes to Sociocultural Flows",
x = "Changes to Flow",
size = "Count",
fill = "Impact Direction")
socioalter
socioalter + facet_wrap(~X2.2.Subtype)
###########################################################################################
### Do figures on each flow type #############################################################################
#######################################################################################
# do for just range shift
range = ggplot(altered_flow_data[X2.2.Subtype == "range-shift", ], aes(x = altered_flow, fill = alteration)) +
geom_bar(position= "stack") +
coord_flip() +
theme_minimal() +
scale_fill_manual(values = c("Increase" = "dodgerblue3", "Decrease" = "deeppink3", "Complex change" = "goldenrod1")) +
labs(
title = "Changes to Range Shifts",
x = "Changes to Flow",
size = "Count",
fill = "Impact Direction")
range
# vs migration
migration = ggplot(altered_flow_data[X2.2.Subtype == "migration", ], aes(x = altered_flow, fill = alteration)) +
geom_bar(position= "stack") +
coord_flip() +
theme_minimal() +
scale_fill_manual(values = c("Increase" = "dodgerblue3", "Decrease" = "deeppink3", "Complex change" = "goldenrod1")) +
labs(
title = "Changes to Animal Migrations",
x = "Changes to Flow",
size = "Count",
fill = "Impact Direction")
migration
# vs disease spread
dis = ggplot(altered_flow_data[X2.2.Subtype == "disease spread", ], aes(x = altered_flow, fill = alteration)) +
geom_bar(position= "stack") +
coord_flip() +
theme_minimal() +
scale_fill_manual(values = c("Increase" = "dodgerblue3", "Decrease" = "deeppink3", "Complex change" = "goldenrod1")) +
labs(
title = "Changes to Transboundary Disease Spread",
x = "Changes to Flow",
size = "Count",
fill = "Impact Direction")
dis
###########################################################################################
### Do figures by top driver(s) #############################################################################
#######################################################################################
###########################################################################################
### COMBINATIONS and COUNTS  - HEAT MAPS AND ALLUVIALS ###########################################
#######################################################################################
###########################################################################################
### PREP DATA  ###########################################
#######################################################################################
#get combos https://stackoverflow.com/questions/15475832/count-number-of-time-combination-of-events-appear-in-dataframe-columns-ext
### NOW NEED TO GET COMBINATIONS and COUNTS
ncp_rangeshift = NCP_data[X2.2.Subtype == "range-shift", ]
#*** TO DO FOR TOP SUBFLOWS
head(driver_flow_impact)
driver_flow_impact[,count_driver_alteredflow:=.N, by=.(driver, altered_flow)]
summary(driver_flow_impact$count_driver_alteredflow)
driver_flow_impact[,count_driver_alteration:=.N, by=.(driver, altered_flow,  alteration)]
summary(driver_flow_impact$count_driver_alteration)
driver_flow_impact[,count_driver_bd_impactdirection:=.N, by=.(driver, impact, direction)]
#PREP DATA: to do the alluvials, we need fewer categories
# calculate driver frequencies
tab <- table(driver_flow_impact$driver)
# sort
tab_s <- sort(tab)
# extract 10 most frequent nationalities
top10_driver <- tail(names(tab_s), 10)
top5_driver <- tail(names(tab_s), 5)
# subset of data frame
d_s <- subset(driver_flow_impact, driver %in% top10_driver)
d_s <- subset(driver_flow_impact, driver %in% top5_driver)
# order factor levels
d_s$driver <- factor(d_s$driver, levels = rev(top10_driver))
d_s$driver <- factor(d_s$driver, levels = rev(top5_driver))
# calculate impact frequencies
tab <- table(driver_flow_impact$impact)
# sort
tab_s <- sort(tab)
# extract 10 most frequent nationalities
top10_impact <- tail(names(tab_s), 10)
#extract top 5
top5_impact <- tail(names(tab_s), 5)
#extract top 7
top7_impact <- tail(names(tab_s), 7)
# subset of data frame
i_s <- subset(driver_flow_impact, impact %in% top10_impact)
i_s <- subset(driver_flow_impact, impact %in% top5_impact)
i_s <- subset(driver_flow_impact, impact %in% top7_impact)
# order factor levels
i_s$impact <- factor(i_s$impact, levels = rev(top5_impact))
i_s$impact <- factor(i_s$impact, levels = rev(top10_impact))
i_s$impact <- factor(i_s$impact, levels = rev(top7_impact))
#clean a couple of things
i_s$driver <- gsub("\\.", " ", i_s$driver)
i_s$driver <- gsub("\\  ", " ", i_s$driver)
i_s$driver <- gsub("\\c ", "c", i_s$driver)
i_s$impact <- gsub("\\.", " ", i_s$impact)
#view lists
top10_impact
top5_impact
top10_driver
top5_driver
top7_impact
## subset the data to make the alluvials
d_s <- subset(driver_flow_impact, driver %in% top10_driver)
d_s <- subset(d_s, impact %in% top7_impact)
d_s$driver <- gsub("\\.", " ", d_s$driver)
##### HEAT MAPS #######################
# driver by flow counts for all
# ggplot(driver_flow_impact, aes(driver, altered_flow, fill= count_driver_alteredflow)) +
#   geom_tile() +
#   scale_size_continuous(range = c(1, 8),
#                         limits = c(0, 300),
#                         breaks=c(1, 75, 150, 225, 300)) +
#   scale_fill_gradient(low="white", high="blue") + coord_flip()
#
# ggplot(driver_flow_impact, aes(x = driver, y = altered_flow, size = count_driver_alteredflow)) +
#   geom_point(color = "blue", alpha = 0.7) +  # Use points to represent combinations
#   scale_size_continuous(range = c(1, 8),
#                         limits = c(0, 300),
#                         breaks=c(1, 75, 150, 225, 300)) +   # Adjust size range for better visibility
#   labs(
#     title = "Interaction Between Altered Flows and Impacts",
#     x = "Altered Flow",
#     y = "Impact",
#     size = "Count"
#   ) +
#   theme_minimal() +
#   theme(
#     axis.text.x = element_text(angle = 45, hjust = 1),  # Rotate x-axis labels for readability
#     panel.grid.major = element_line(color = "grey80", linetype = "dotted")
#   )
# FOR USE IN REPORT #
#with directionality of how flow is altered
driver_alter <-  ggplot(d_s, aes(x = driver, y = altered_flow, size = count_driver_alteration, color = alteration)) +
geom_point(alpha = 0.4) +  # Add points with alpha transparency
facet_wrap(~alteration, scales = "fixed") +  # Create facets for each NCP direction
scale_size_continuous(range = c(1, 8),
limits = c(0, 300),
breaks=c(1, 75, 150, 225, 300)) + # Adjust size range
scale_color_manual(values = c("Increase" = "dodgerblue3", "Decrease" = "deeppink3", "Complex change" = "goldenrod1", "NoChange" = "grey70")) +
labs(
title = "Driver alteration of flow",
x = "Driver",
y = "Impact",
size = "Count",
color = "Impact Direction"
) +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),  # Rotate x-axis labels for readability
panel.grid.major = element_line(color = "grey80", linetype = "dotted")
)
driver_alter
driver_alter +  scale_size_continuous(range = c(1, 5)) + facet_wrap(~X2.1.Flow.Type, scales = "fixed")
### do with the rainbow colors to color by weight of evidence
d_s  <- d_s %>%
mutate(reorder_driver = fct_infreq(driver))
d_s$reorder_driver <- factor(d_s$reorder_driver,
levels= rev(levels(d_s$reorder_driver)))
# d_s_sum <- d_s %>%
#   group_by(driver,altered_flow,X2.1.Flow.Type, alteration)%>%
#   dplyr::summarize(sum_driver_alteration = sum(count_driver_alteration))
### something is wrong...VERY WRONG - way too many observations
driver_altered_flow_final <- ggplot(d_s,
aes(x = altered_flow, y = reorder_driver,
size = count_driver_alteration,
color = count_driver_alteration,
fill = count_driver_alteration,)) +
geom_point(alpha = 0.4,shape= 21) +  # Add points with alpha transparency
facet_wrap(~alteration, scales = "fixed") +  # Create facets for each NCP direction
scale_size_continuous(range = c(1, 8),
limits = c(1, 300),
breaks=c(1, 15, 30, 50, 120),
name = "Count") +
scale_colour_gradientn(colors = tim.colors(10),
breaks=c(1, 15, 30, 50, 120),
limits = c(1, 300),
trans = "log",
name = "Count",
guide = "legend") +# Adjust size range and breaks+
scale_fill_gradientn(colors = tim.colors(10),
breaks=c(1, 15, 30, 50, 120),
limits = c(1, 300),
trans = "log",
name = "Count",
guide = "legend") +
labs(
title = "Changes to flow from climate drivers",
x = "Alteration of Flow",
y = "Driver",
size = "Count",
color = "Count"
) +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),  # Rotate x-axis labels for readability
panel.grid.major = element_line(color = "grey80", linewidth=0.05),
panel.border = element_rect(colour= "black", fill= NA)
)
lengths <- d_s %>%
data.frame()%>%
group_by(driver,altered_flow,X2.1.Flow.Type, alteration)%>%
dplyr::summarize(length= length(driver))
driver_altered_flow_final
driver_altered_flow_final
### do for subflows
## Biotic
biotic.driver_altered_flow_final <- ggplot(d_s[X2.1.Flow.Type == "Biotic",],
aes(x = altered_flow, y = reorder_driver,
size = count_driver_alteration,
color = count_driver_alteration,
fill = count_driver_alteration,)) +
geom_point(alpha = 0.4,shape= 21) +  # Add points with alpha transparency
facet_wrap(~alteration, scales = "fixed") +  # Create facets for each NCP direction
scale_size_continuous(range = c(1, 8),
limits = c(1, 300),
breaks=c(1, 15, 30, 50, 120),
name = "Count") +
scale_colour_gradientn(colors = tim.colors(10),
breaks=c(1, 15, 30, 50, 120),
limits = c(1, 300),
trans = "log",
name = "Count",
guide = "legend") +# Adjust size range and breaks+
scale_fill_gradientn(colors = tim.colors(10),
breaks=c(1, 15, 30, 50, 120),
limits = c(1, 300),
trans = "log",
name = "Count",
guide = "legend") +
labs(
title = "Changes to biotic flow from climate drivers",
x = "Alteration of Flow",
y = "Driver",
size = "Count",
color = "Count"
) +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),  # Rotate x-axis labels for readability
panel.grid.major = element_line(color = "grey80", linewidth=0.05),
panel.border = element_rect(colour= "black", fill= NA)
)
biotic.driver_altered_flow_final
biotic.driver_altered_flow_final
final_driver_impact  +  facet_wrap(~X2.1.Flow.Type, scales = "fixed")
socio_altered_flow_final <- ggplot(d_s[X2.1.Flow.Type == "Sociocultural",],
aes(x = altered_flow, y = reorder_driver,
size = count_driver_alteration,
color = count_driver_alteration,
fill = count_driver_alteration,)) +
geom_point(alpha = 0.4,shape= 21) +  # Add points with alpha transparency
facet_wrap(~alteration, scales = "fixed") +  # Create facets for each NCP direction
scale_size_continuous(range = c(1, 8),
limits = c(1, 300),
breaks=c(1, 15, 30, 50, 120),
name = "Count") +
scale_colour_gradientn(colors = tim.colors(10),
breaks=c(1, 15, 30, 50, 120),
limits = c(1, 300),
trans = "log",
name = "Count",
guide = "legend") +# Adjust size range and breaks+
scale_fill_gradientn(colors = tim.colors(10),
breaks=c(1, 15, 30, 50, 120),
limits = c(1, 300),
trans = "log",
name = "Count",
guide = "legend") +
labs(
title = "Changes to Sociocultural flow from climate drivers",
x = "Alteration of Flow",
y = "Driver",
size = "Count",
color = "Count"
) +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),  # Rotate x-axis labels for readability
panel.grid.major = element_line(color = "grey80", linewidth=0.05),
panel.border = element_rect(colour= "black", fill= NA)
)
socio_altered_flow_final
human_altered_flow_final <- ggplot(d_s[X2.1.Flow.Type == "Human movement",],
aes(x = altered_flow, y = reorder_driver,
size = count_driver_alteration,
color = count_driver_alteration,
fill = count_driver_alteration,)) +
geom_point(alpha = 0.4,shape= 21) +  # Add points with alpha transparency
facet_wrap(~alteration, scales = "fixed") +  # Create facets for each NCP direction
scale_size_continuous(range = c(1, 8),
limits = c(1, 300),
breaks=c(1, 15, 30, 50, 120),
name = "Count") +
scale_colour_gradientn(colors = tim.colors(10),
breaks=c(1, 15, 30, 50, 120),
limits = c(1, 300),
trans = "log",
name = "Count",
guide = "legend") +# Adjust size range and breaks+
scale_fill_gradientn(colors = tim.colors(10),
breaks=c(1, 15, 30, 50, 120),
limits = c(1, 300),
trans = "log",
name = "Count",
guide = "legend") +
labs(
title = "Changes to Human movement and Trade flow from climate drivers",
x = "Alteration of Flow",
y = "Driver",
size = "Count",
color = "Count"
) +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),  # Rotate x-axis labels for readability
panel.grid.major = element_line(color = "grey80", linewidth=0.05),
panel.border = element_rect(colour= "black", fill= NA)
human_altered_flow_final
human_altered_flow_final
human_altered_flow_final <- ggplot(d_s[X2.1.Flow.Type == "Human movement",],
aes(x = altered_flow, y = reorder_driver,
size = count_driver_alteration,
color = count_driver_alteration,
fill = count_driver_alteration,)) +
geom_point(alpha = 0.4,shape= 21) +  # Add points with alpha transparency
facet_wrap(~alteration, scales = "fixed") +  # Create facets for each NCP direction
scale_size_continuous(range = c(1, 8),
limits = c(1, 300),
breaks=c(1, 15, 30, 50, 120),
name = "Count") +
scale_colour_gradientn(colors = tim.colors(10),
breaks=c(1, 15, 30, 50, 120),
limits = c(1, 300),
trans = "log",
name = "Count",
guide = "legend") +# Adjust size range and breaks+
scale_fill_gradientn(colors = tim.colors(10),
breaks=c(1, 15, 30, 50, 120),
limits = c(1, 300),
trans = "log",
name = "Count",
guide = "legend") +
labs(
title = "Changes to Human movement and Trade flow from climate drivers",
x = "Alteration of Flow",
y = "Driver",
size = "Count",
color = "Count"
) +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),  # Rotate x-axis labels for readability
panel.grid.major = element_line(color = "grey80", linewidth=0.05),
panel.border = element_rect(colour= "black", fill= NA)
)
human_altered_flow_final
phys_altered_flow_final <- ggplot(d_s[X2.1.Flow.Type == "Physical",],
aes(x = altered_flow, y = reorder_driver,
size = count_driver_alteration,
color = count_driver_alteration,
fill = count_driver_alteration,)) +
geom_point(alpha = 0.4,shape= 21) +  # Add points with alpha transparency
facet_wrap(~alteration, scales = "fixed") +  # Create facets for each NCP direction
scale_size_continuous(range = c(1, 8),
limits = c(1, 300),
breaks=c(1, 15, 30, 50, 120),
name = "Count") +
scale_colour_gradientn(colors = tim.colors(10),
breaks=c(1, 15, 30, 50, 120),
limits = c(1, 300),
trans = "log",
name = "Count",
guide = "legend") +# Adjust size range and breaks+
scale_fill_gradientn(colors = tim.colors(10),
breaks=c(1, 15, 30, 50, 120),
limits = c(1, 300),
trans = "log",
name = "Count",
guide = "legend") +
labs(
title = "Changes to Physical flow from climate drivers",
x = "Alteration of Flow",
y = "Driver",
size = "Count",
color = "Count"
) +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),  # Rotate x-axis labels for readability
panel.grid.major = element_line(color = "grey80", linewidth=0.05),
panel.border = element_rect(colour= "black", fill= NA)
)
phys_altered_flow_final
biotic.driver_altered_flow_final <- ggplot(d_s[X2.1.Flow.Type == "Biotic",],
aes(x = altered_flow, y = reorder_driver,
size = count_driver_alteration,
color = count_driver_alteration,
fill = count_driver_alteration,)) +
geom_point(alpha = 0.4,shape= 21) +  # Add points with alpha transparency
facet_wrap(~alteration, scales = "fixed") +  # Create facets for each NCP direction
scale_size_continuous(range = c(1, 8),
limits = c(1, 300),
breaks=c(1, 15, 30, 50, 120),
name = "Count") +
scale_colour_gradientn(colors = tim.colors(10),
breaks=c(1, 15, 30, 50, 120),
limits = c(1, 300),
trans = "log",
name = "Count",
guide = "legend") +# Adjust size range and breaks+
scale_fill_gradientn(colors = tim.colors(10),
breaks=c(1, 15, 30, 50, 120),
limits = c(1, 300),
trans = "log",
name = "Count",
guide = "legend") +
labs(
title = "Changes to Biotic flow from climate drivers",
x = "Alteration of Flow",
y = "Driver",
size = "Count",
color = "Count"
) +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),  # Rotate x-axis labels for readability
panel.grid.major = element_line(color = "grey80", linewidth=0.05),
panel.border = element_rect(colour= "black", fill= NA)
)
biotic.driver_altered_flow_final
ggplot(d_s,
aes(x = altered_flow, y = reorder_driver,
size = count_driver_alteration,
color = count_driver_alteration,
fill = count_driver_alteration,)) +
geom_point(alpha = 0.4,shape= 21) +  # Add points with alpha transparency
facet_wrap(~alteration, scales = "fixed") +  # Create facets for each NCP direction
scale_size_continuous(range = c(1, 8),
limits = c(1, 300),
breaks=c(1, 15, 30, 50, 120),
name = "Count") +
scale_colour_gradientn(colors = tim.colors(10),
breaks=c(1, 15, 30, 50, 120),
limits = c(1, 300),
trans = "log",
name = "Count",
guide = "legend") +# Adjust size range and breaks+
scale_fill_gradientn(colors = tim.colors(10),
breaks=c(1, 15, 30, 50, 120),
limits = c(1, 300),
trans = "log",
name = "Count",
guide = "legend") +
labs(
title = "Changes to flow from climate drivers",
x = "Alteration of Flow",
y = "Driver",
size = "Count",
color = "Count"
) +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),  # Rotate x-axis labels for readability
panel.grid.major = element_line(color = "grey80", linewidth=0.05),
panel.border = element_rect(colour= "black", fill= NA)
)
