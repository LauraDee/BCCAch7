x = "Driver",
y = "Count") +
theme_minimal() + coord_flip() + theme(legend.title = "")
ggplot(as.data.frame(df), aes(x = Driver, y= Count)) +
geom_bar(position = 'dodge') +
labs(
title = "Count of Drivers",
x = "Driver",
y = "Count") +
theme_minimal() + coord_flip() + theme(legend.title = "")
head(df)
ggplot(as.data.frame(df), aes(x = Driver, y= count)) +
geom_bar(position = 'dodge') +
labs(
title = "Count of Drivers",
x = "Driver",
y = "Count") +
theme_minimal() + coord_flip() + theme(legend.title = "")
ggplot(df, aes(Driver)) +
geom_bar(position = 'dodge') +
labs(
title = "Count of Drivers",
x = "Driver",
y = "Count") +
theme_minimal() + coord_flip() + theme(legend.title = "")
ggplot(df, aes(Driver)) +
geom_bar(position = 'dodge') +
labs(
title = "Count of Drivers",
x = "Driver",
y = "Count")
ggplot(df, aes(count, fill = Driver)) +
geom_bar(position = 'dodge') +
labs(
title = "Count of Drivers",
x = "Driver",
y = "Count")
ggplot(df, aes(Driver, fill = count)) +
geom_bar(position = 'dodge') +
labs(
title = "Count of Drivers",
x = "Driver",
y = "Count") +
theme_minimal() + coord_flip() + theme(legend.title = "")
ggplot(df, aes(Driver, fill = count)) +
geom_bar(position = 'dodge') +
labs(
title = "Count of Drivers",
x = "Driver",
y = "Count") +
theme_minimal() + coord_flip()
hist(df$count)
ggplot(df, aes(Driver, count)) +
geom_bar(position = 'dodge') +
labs(
title = "Count of Drivers",
x = "Driver",
y = "Count") +
theme_minimal() + coord_flip()
ggplot(df, aes(Driver, y = count)) +
geom_bar(position = 'dodge') +
labs(
title = "Count of Drivers",
x = "Driver",
y = "Count") +
theme_minimal() + coord_flip()
ggplot(df, aes(y = count)) +
geom_bar(position = 'dodge') +
labs(
title = "Count of Drivers",
x = "Driver",
y = "Count") +
theme_minimal() + coord_flip()
ggplot(df, aes(y = count, fill = Driver)) +
geom_bar(position = 'dodge') +
labs(
title = "Count of Drivers",
x = "Driver",
y = "Count") +
theme_minimal() + coord_flip()
pivot_longer(results)
tidyr::pivot_longer(results)
tidyr::pivot_longer(results$x)
df2 <- results |>
pivot_longer(cols = everything(),
names_to = 'date',
values_to = 'x')
ggplot(df, aes(Driver)) +
geom_bar() +
labs(
title = "Count of Drivers",
x = "Driver",
y = "Count") +
theme_minimal() + coord_flip()
df$count
ggplot(df, aes(y = count, fill = Driver)) +
geom_bar(position = 'dodge') +
labs(
title = "Count of Drivers",
x = "Driver",
y = "Count")
ggplot(df, aes(Driver)) + geom_bar()
ggplot(as.data.frame(df), aes(Driver)) + geom_bar()
ggplot(as.data.frame(df), aes(Driver)) + geom_bar()
ggplot(df, aes(y = count, fill = Driver)) +
geom_bar(position = 'dodge') +
labs(
title = "Count of Drivers",
x = "Driver",
y = "Count")
ggplot(df, aes(Driver, fill = count)) +
geom_bar(position = 'dodge') +
labs(
title = "Count of Drivers",
x = "Driver",
y = "Count")
ggplot(df, aes(Driver, fill = count)) +
geom_bar(aes(y= count))
ggplot(df, aes(Driver)) +
geom_bar(aes(y= count))
ggplot(df) +
geom_bar(aes(y=count))
ggplot(df, aes(x=Driver)) +
geom_bar(aes(y=count))
df <- fread("driver_counts.csv")
head(df)
colnames(df)
ggplot(df, aes(x=Driver)) +
geom_bar(aes(y=count))
ggplot(df, aes(x=Driver)) +
geom_bar(y=count))
ggplot(df, aes(x=Driver)) +
geom_bar(y=count)
ggplot(df, aes(x=Driver)) +
geom_bar()
ggplot(df, aes(Driver, count)) +
geom_col()
ggplot(df, aes(Driver, count)) +
geom_col() + labs(
title = "Count of Drivers",
x = "Driver",
y = "Count")
ggplot(df, aes(Driver, count)) +
geom_col() + labs(
title = "Count of Drivers",
x = "Driver",
y = "Count") +
theme_minimal() + coord_flip()
## filter to drivers with more than 5 or 10 papers
df5 <- df %>%  filter(count<5)
ncol(df5)
nrow(df5)
nrow(df)
ggplot(df5, aes(Driver, count)) +
geom_col() + labs(
title = "Count of Drivers",
x = "Driver",
y = "Count") +
theme_minimal() + coord_flip()
df5 <- df %>%  filter(count>5)
nrow(df5)
nrow(df)
ggplot(df5, aes(Driver, count)) +
geom_col() + labs(
title = "Count of Drivers",
x = "Driver",
y = "Count") +
theme_minimal() + coord_flip()
drivers <- ggplot(df5, aes(Driver, count)) +
geom_col() + labs(
title = "Count of Drivers",
x = "Driver",
y = "Count") +
theme_minimal() + coord_flip()
drivers + geom_text(
stat = "count",
aes(
label = after_stat(count)
),
position = position_dodge(),
color = "black",
size = 8,
vjust = -0.2
)
drivers <- ggplot(df5, aes(Driver, count)) +
geom_col() + labs(
title = "Count of Drivers",
x = "Driver",
y = "Count") +
theme_minimal() + coord_flip()
drivers
drivers + geom_text(
stat = "count",
aes(
label = after_stat(count)
),
position = position_dodge(),
color = "black",
size = 8,
vjust = -0.2
)
mtcars %>%
group_by(am, gear) %>%
summarise (n = n()) %>%
mutate(prop = n / sum(n))
head(data)
data %>%
group_by(X2.1.Flow.Typ) %>%
summarise (n = n()) %>%
mutate(prop = n / sum(n))
data %>%
group_by(X2.1.Flow.Type) %>%
summarise (n = n()) %>%
mutate(prop = n / sum(n))
flow_percent <- data %>%
group_by(X2.1.Flow.Type) %>%
summarise (n = n()) %>%
mutate(prop = n / sum(n))
flowpercent <-  ggplot(as.data.frame(flow_percent, aes(X2.1.Flow.Type,  fill = X2.1.Flow.Type)) +
geom_bar(position = 'dodge') +
labs(
title = "Count of Papers by Flow Type",
x = "Flow Type",
y = "Count") +
theme_minimal() + theme(legend.position="none")
)
ggplot(as.data.frame(flow_percent, aes(prop,  fill = X2.1.Flow.Type)) +
geom_bar(position = 'dodge') +
labs(
title = "Count of Papers by Flow Type",
x = "Flow Type",
y = "%") +
theme_minimal() + theme(legend.position="none")
ggplot(as.data.frame(flow_percent, aes(prop,  fill = X2.1.Flow.Type)) +
ggplot(as.data.frame(flow_percent, aes(prop,  fill = X2.1.Flow.Type)) +
geom_bar(position = 'dodge') +
labs(
title = "Count of Papers by Flow Type",
x = "Flow Type",
y = "%")
ggplot(as.data.frame(flow_percent, aes(prop,  fill = X2.1.Flow.Type)) +
flow_percent <- data %>%
group_by(X2.1.Flow.Type) %>%
summarise (n = n()) %>%
mutate(prop = n / sum(n))
ggplot(as.data.frame(flow_percent, aes(prop, fill = X2.1.Flow.Type)) +
geom_bar(position = 'dodge')
ggplot(as.data.frame(flow_percent, aes(prop, fill = X2.1.Flow.Type)) +
ggplot(as.data.frame(flow_percent, aes(prop, fill = X2.1.Flow.Type)) +
geom_bar())
ggplot(as.data.frame(flow_percent, aes(prop, fill = X2.1.Flow.Type))) +
geom_bar()
ggplot(as.data.frame(flow_percent, aes(X2.1.Flow.Type, prop))) +
geom_bar()
ggplot(as.data.frame(flow_percent, aes(X2.1.Flow.Type, prop))) +
geom_bar() +
labs( title = "Percent of Papers by Flow Type",
x = "Flow Type",
y = "%") +
theme_minimal() + theme(legend.position="none")
ggplot(flow_percent, aes(X2.1.Flow.Type, prop)) +
geom_bar()
ggplot(flow_percent, aes(X2.1.Flow.Type, prop)) +
geom_bar(y=prop)
flow_percent <- data %>%
group_by(X2.1.Flow.Type) %>%
summarise (n = n()) %>%
mutate(prop = n / sum(n))
flow_percent
ggplot(flow_percent, aes(prop)) +
geom_bar()
ggplot(flow_percent, aes(X2.1.Flow.Type, prop)) +
geom_bar(position= "stacked")
flow_percent
ggplot(flow_percent, aes(prop, fill = X2.1.Flow.Type)) +
geom_bar(position= "stacked")
ggplot(flow_percent, aes(prop, fill = X2.1.Flow.Type)) +
geom_bar(position= "stack")
ggplot(flow_percent, aes(fill = X2.1.Flow.Type)) +
geom_bar(position= "stack")
ggplot(flow_percent, aes(X2.1.Flow.Type)) +
geom_bar(position= "stack")
ggplot(flow_percent, aes(as.factor(X2.1.Flow.Type), prop)) +
geom_col(aes(fill = as.factor(X2.1.Flow.Type)))
ggplot(flow_percent, aes(as.factor(X2.1.Flow.Type), prop)) +
geom_col(aes(fill = as.factor(X2.1.Flow.Type)))
xlab("Transmission") +
ylab("Proportions") +
theme_minimal() + theme(legend.position="none")
ggplot(flow_percent, aes(as.factor(X2.1.Flow.Type), prop)) +
geom_col(aes(fill = as.factor(X2.1.Flow.Type)))
xlab("Flow Type") +
ylab("Proportions") +
theme_minimal() + theme(legend.position="none")
ggplot(flow_percent, aes(as.factor(X2.1.Flow.Type), prop)) +
geom_col(aes(fill = as.factor(X2.1.Flow.Type))) +
labs( title = "Percent of Papers by Flow Type",
x = "Flow Type",
y = "%") +
theme_minimal() + theme(legend.position="none")
ggplot(flow_percent, aes(as.factor(X2.1.Flow.Type), prop)) +
geom_col(aes(fill = as.factor(X2.1.Flow.Type))) +
labs( title = "Percent of Papers by Flow Type",
x = "Flow Type",
y = "Proportion of Entries") +
theme_minimal() + theme(legend.position="none")
ggplot(flow_percent, aes(as.factor(X2.1.Flow.Type), prop)) +
geom_col(aes(fill = as.factor(X2.1.Flow.Type))) +
labs( title = "Proportion of Flow Type",
x = "Flow Type",
y = "Proportion of Entries") +
theme_minimal() + theme(legend.position="none")
subflow_percent <- data %>%
group_by(X2.2.Subtype) %>%
summarise (n = n()) %>%
mutate(prop = n / sum(n))
subflow_percent
ggplot(subflow_percent, aes(as.factor(X2.2.Subtype), prop)) +
geom_col(aes(fill = as.factor(X2.2.Subtype))) +
labs( title = "Proportion of Subflow Types",
x = "Subflow Type",
y = "Proportion of Entries") +
theme_minimal() + theme(legend.position="none")
ggplot(df5, aes(Driver, count)) +
geom_col() + labs(
title = "Count of Drivers",
x = "Driver",
y = "Count") +
theme_minimal() + coord_flip()
df10 <- df %>%  filter(count>10)
nrow(df10)
nrow(df5)
ggplot(df10, aes(Driver, count)) +
geom_col() + labs(
title = "Count of Drivers",
x = "Driver",
y = "Count") +
theme_minimal() + coord_flip()
docs <- read.csv("data/003_output_byFlow.csv") #before it was called reshaped_3_byFlow
biotic <- read.csv("data/data_cleaning/bioticFlowSubtype_lookup.csv")
socio <- read.csv("data/data_cleaning/socioculturalFlowSubtype_lookup.csv")
#phys <-  read.csv("data/data_cleaning/physicalFlowSubtype_lookup.csv")
human <-  read.csv("data/data_cleaning/lookuptable_humamovement.csv")
phys <-  read.csv("data/data_cleaning/physicalFlowSubtype_lookup_CRM.csv")
## Reclassify human movement
lookup_table <- human %>%
distinct(sub_original, sub_new)
df1_updated <- docs %>%
left_join(lookup_table, by = c("X2.2.Subtype" = "sub_original")) %>%
mutate(X2.2.Subtype = if_else(is.na(sub_new), X2.2.Subtype, sub_new)) %>%
select(-sub_new)
df2_updated <- df1_updated %>%
left_join(socio %>% dplyr::select("X2.2.Subtype.NEW", "ID_DOI_by_Flow"), by = c("ID_DOI_by_Flow" = "ID_DOI_by_Flow")) %>%
mutate(X2.2.Subtype = if_else(is.na(X2.2.Subtype.NEW), X2.2.Subtype, X2.2.Subtype.NEW)) %>%
select(-X2.2.Subtype.NEW)
glimpse(df2_updated)
df2_updated
docs <- read.csv("data/003_output_byFlow.csv") #before it was called reshaped_3_byFlow
biotic <- read.csv("data/data_cleaning/bioticFlowSubtype_lookup.csv")
socio <- read.csv("data/data_cleaning/socioculturalFlowSubtype_lookup.csv")
#phys <-  read.csv("data/data_cleaning/physicalFlowSubtype_lookup.csv")
human <-  read.csv("data/data_cleaning/lookuptable_humamovement.csv")
phys <-  read.csv("data/data_cleaning/physicalFlowSubtype_lookup_CRM.csv")
## Reclassify human movement
lookup_table <- human %>%
distinct(sub_original, sub_new)
df1_updated <- docs %>%
left_join(lookup_table, by = c("X2.2.Subtype" = "sub_original")) %>%
mutate(X2.2.Subtype = if_else(is.na(sub_new), X2.2.Subtype, sub_new)) %>%
select(-sub_new)
## Reclassify socio
# ## Sanity Check: DOIs must match
# socio %>% select(ID_DOI_by_Flow,DOI) %>% tail(3)
# ids <- socio %>% select(ID_DOI_by_Flow) %>% tail(3)
# df1_updated$DOI[which(df1_updated$ID_DOI_by_Flow %in% ids$ID_DOI_by_Flow)]
df2_updated <- df1_updated %>%
left_join(socio %>% dplyr::select("X2.2.Subtype.NEW", "ID_DOI_by_Flow"), by = c("ID_DOI_by_Flow" = "ID_DOI_by_Flow")) %>%
mutate(X2.2.Subtype = if_else(is.na(X2.2.Subtype.NEW), X2.2.Subtype, X2.2.Subtype.NEW)) %>%
select(-X2.2.Subtype.NEW)
glimpse(df2_updated)
## Reclassify physical
## Sanity Check: DOIs must match
# phys %>% select(ID_DOI_by_Flow,DOI) %>% tail(3)
# ids <- phys %>% select(ID_DOI_by_Flow) %>% tail(3)
# df2_updated$DOI[which(df2_updated$ID_DOI_by_Flow %in% ids$ID_DOI_by_Flow)]
df3_updated <- df2_updated %>%
left_join(phys %>% dplyr::select("X2.1.Flow.Type.NEW","X2.2.Subtype.NEW", "ID_DOI_by_Flow"), by = c("ID_DOI_by_Flow" = "ID_DOI_by_Flow")) %>%
mutate(X2.1.Flow.Type = if_else(is.na(X2.1.Flow.Type.NEW), X2.1.Flow.Type, X2.1.Flow.Type.NEW)) %>%
mutate(X2.2.Subtype = if_else(is.na(X2.2.Subtype.NEW), X2.2.Subtype, X2.2.Subtype.NEW)) %>%
select(-X2.2.Subtype.NEW,-X2.1.Flow.Type.NEW)
## Reclassify biotic
## Sanity Check: DOIs must match
biotic %>% select(ID_DOI_by_Flow,DOI) %>% tail(4)
ids <- biotic %>% select(ID_DOI_by_Flow) %>% tail(4)
df3_updated$DOI[which(df3_updated$ID_DOI_by_Flow %in% ids$ID_DOI_by_Flow)]
df4_updated <- df3_updated %>%
left_join(biotic %>% dplyr::select("X2.1.Flow.Type.NEW","X2.2.Subtype.NEW", "ID_DOI_by_Flow"), by = c("ID_DOI_by_Flow" = "ID_DOI_by_Flow")) %>%
mutate(X2.1.Flow.Type = if_else(is.na(X2.1.Flow.Type.NEW), X2.1.Flow.Type, X2.1.Flow.Type.NEW)) %>%
mutate(X2.2.Subtype = if_else(is.na(X2.2.Subtype.NEW), X2.2.Subtype, X2.2.Subtype.NEW)) %>%
select(-X2.2.Subtype.NEW,-X2.1.Flow.Type.NEW)
df4_updated <- df4_updated %>% mutate(X2.1.Flow.Type = ifelse(X2.1.Flow.Type=="Trade (transport of goods and services)","Trade",X2.1.Flow.Type))
levels(factor(df4_updated$X2.1.Flow.Type))
write.csv(df4_updated, 'data/004_output_Reclassified.csv')
table(df4_updated$X2.2.Subtype)
list(df4_updated$X2.2.Subtype)
list(unique((df4_updated$X2.2.Subtype))
list(unique(df4_updated$X2.2.Subtype))
list(unique(df4_updated$X2.2.Subtype))
list(unique(df2_updated$X2.2.Subtype))
list(unique(df4_updated$X2.2.Subtype))
list(unique(df2_updated$X2.2.Subtype))
lookup_table <- human %>%
distinct(sub_original, sub_new)
df1_updated <- docs %>%
left_join(lookup_table, by = c("X2.2.Subtype" = "sub_original")) %>%
mutate(X2.2.Subtype = if_else(is.na(sub_new), X2.2.Subtype, sub_new)) %>%
select(-sub_new)
head(phys)
docs <- read.csv("data/003_output_byFlow.csv") #before it was called reshaped_3_byFlow
biotic <- read.csv("data/data_cleaning/bioticFlowSubtype_lookup.csv")
socio <- read.csv("data/data_cleaning/socioculturalFlowSubtype_lookup.csv")
#phys <-  read.csv("data/data_cleaning/physicalFlowSubtype_lookup.csv")
human <-  read.csv("data/data_cleaning/lookuptable_humamovement.csv")
phys <-  read.csv("data/data_cleaning/physicalFlowSubtype_lookup_CRM.csv")
## Reclassify human movement
lookup_table <- human %>%
distinct(sub_original, sub_new)
df1_updated <- docs %>%
left_join(lookup_table, by = c("X2.2.Subtype" = "sub_original")) %>%
mutate(X2.2.Subtype = if_else(is.na(sub_new), X2.2.Subtype, sub_new)) %>%
select(-sub_new)
## Reclassify socio
# ## Sanity Check: DOIs must match
# socio %>% select(ID_DOI_by_Flow,DOI) %>% tail(3)
# ids <- socio %>% select(ID_DOI_by_Flow) %>% tail(3)
# df1_updated$DOI[which(df1_updated$ID_DOI_by_Flow %in% ids$ID_DOI_by_Flow)]
df2_updated <- df1_updated %>%
left_join(socio %>% dplyr::select("X2.2.Subtype.NEW", "ID_DOI_by_Flow"), by = c("ID_DOI_by_Flow" = "ID_DOI_by_Flow")) %>%
mutate(X2.2.Subtype = if_else(is.na(X2.2.Subtype.NEW), X2.2.Subtype, X2.2.Subtype.NEW)) %>%
select(-X2.2.Subtype.NEW)
glimpse(df2_updated)
## Reclassify physical
## Sanity Check: DOIs must match
# phys %>% select(ID_DOI_by_Flow,DOI) %>% tail(3)
# ids <- phys %>% select(ID_DOI_by_Flow) %>% tail(3)
# df2_updated$DOI[which(df2_updated$ID_DOI_by_Flow %in% ids$ID_DOI_by_Flow)]
df3_updated <- df2_updated %>%
left_join(phys %>% dplyr::select("X2.1.Flow.Type.NEW","X2.2.Subtype.NEW", "ID_DOI_by_Flow"), by = c("ID_DOI_by_Flow" = "ID_DOI_by_Flow")) %>%
mutate(X2.1.Flow.Type = if_else(is.na(X2.1.Flow.Type.NEW), X2.1.Flow.Type, X2.1.Flow.Type.NEW)) %>%
mutate(X2.2.Subtype = if_else(is.na(X2.2.Subtype.NEW), X2.2.Subtype, X2.2.Subtype.NEW)) %>%
select(-X2.2.Subtype.NEW,-X2.1.Flow.Type.NEW)
## Reclassify biotic
## Sanity Check: DOIs must match
biotic %>% select(ID_DOI_by_Flow,DOI) %>% tail(4)
ids <- biotic %>% select(ID_DOI_by_Flow) %>% tail(4)
df3_updated$DOI[which(df3_updated$ID_DOI_by_Flow %in% ids$ID_DOI_by_Flow)]
df4_updated <- df3_updated %>%
left_join(biotic %>% dplyr::select("X2.1.Flow.Type.NEW","X2.2.Subtype.NEW", "ID_DOI_by_Flow"), by = c("ID_DOI_by_Flow" = "ID_DOI_by_Flow")) %>%
mutate(X2.1.Flow.Type = if_else(is.na(X2.1.Flow.Type.NEW), X2.1.Flow.Type, X2.1.Flow.Type.NEW)) %>%
mutate(X2.2.Subtype = if_else(is.na(X2.2.Subtype.NEW), X2.2.Subtype, X2.2.Subtype.NEW)) %>%
select(-X2.2.Subtype.NEW,-X2.1.Flow.Type.NEW)
df4_updated <- df4_updated %>% mutate(X2.1.Flow.Type = ifelse(X2.1.Flow.Type=="Trade (transport of goods and services)","Trade",X2.1.Flow.Type))
levels(factor(df4_updated$X2.1.Flow.Type))
list(unique(df4_updated$X2.2.Subtype))
write.csv(df4_updated, 'data/004_output_Reclassified.csv')
docs <- read.csv("data/003_output_byFlow.csv") #before it was called reshaped_3_byFlow
biotic <- read.csv("data/data_cleaning/bioticFlowSubtype_lookup.csv")
socio <- read.csv("data/data_cleaning/socioculturalFlowSubtype_lookup.csv")
#phys <-  read.csv("data/data_cleaning/physicalFlowSubtype_lookup.csv")
human <-  read.csv("data/data_cleaning/lookuptable_humamovement.csv")
phys <-  read.csv("data/data_cleaning/physicalFlowSubtype_lookup_CRM.csv")
## Reclassify human movement
lookup_table <- human %>%
distinct(sub_original, sub_new)
df1_updated <- docs %>%
left_join(lookup_table, by = c("X2.2.Subtype" = "sub_original")) %>%
mutate(X2.2.Subtype = if_else(is.na(sub_new), X2.2.Subtype, sub_new)) %>%
select(-sub_new)
## Reclassify socio
# ## Sanity Check: DOIs must match
# socio %>% select(ID_DOI_by_Flow,DOI) %>% tail(3)
# ids <- socio %>% select(ID_DOI_by_Flow) %>% tail(3)
# df1_updated$DOI[which(df1_updated$ID_DOI_by_Flow %in% ids$ID_DOI_by_Flow)]
df2_updated <- df1_updated %>%
left_join(socio %>% dplyr::select("X2.2.Subtype.NEW", "ID_DOI_by_Flow"), by = c("ID_DOI_by_Flow" = "ID_DOI_by_Flow")) %>%
mutate(X2.2.Subtype = if_else(is.na(X2.2.Subtype.NEW), X2.2.Subtype, X2.2.Subtype.NEW)) %>%
select(-X2.2.Subtype.NEW)
glimpse(df2_updated)
## Reclassify physical
## Sanity Check: DOIs must match
# phys %>% select(ID_DOI_by_Flow,DOI) %>% tail(3)
# ids <- phys %>% select(ID_DOI_by_Flow) %>% tail(3)
# df2_updated$DOI[which(df2_updated$ID_DOI_by_Flow %in% ids$ID_DOI_by_Flow)]
df3_updated <- df2_updated %>%
left_join(phys %>% dplyr::select("X2.1.Flow.Type.NEW","X2.2.Subtype.NEW", "ID_DOI_by_Flow"), by = c("ID_DOI_by_Flow" = "ID_DOI_by_Flow")) %>%
mutate(X2.1.Flow.Type = if_else(is.na(X2.1.Flow.Type.NEW), X2.1.Flow.Type, X2.1.Flow.Type.NEW)) %>%
mutate(X2.2.Subtype = if_else(is.na(X2.2.Subtype.NEW), X2.2.Subtype, X2.2.Subtype.NEW)) %>%
select(-X2.2.Subtype.NEW,-X2.1.Flow.Type.NEW)
## Reclassify biotic
## Sanity Check: DOIs must match
biotic %>% select(ID_DOI_by_Flow,DOI) %>% tail(4)
ids <- biotic %>% select(ID_DOI_by_Flow) %>% tail(4)
df3_updated$DOI[which(df3_updated$ID_DOI_by_Flow %in% ids$ID_DOI_by_Flow)]
df4_updated <- df3_updated %>%
left_join(biotic %>% dplyr::select("X2.1.Flow.Type.NEW","X2.2.Subtype.NEW", "ID_DOI_by_Flow"), by = c("ID_DOI_by_Flow" = "ID_DOI_by_Flow")) %>%
mutate(X2.1.Flow.Type = if_else(is.na(X2.1.Flow.Type.NEW), X2.1.Flow.Type, X2.1.Flow.Type.NEW)) %>%
mutate(X2.2.Subtype = if_else(is.na(X2.2.Subtype.NEW), X2.2.Subtype, X2.2.Subtype.NEW)) %>%
select(-X2.2.Subtype.NEW,-X2.1.Flow.Type.NEW)
df4_updated <- df4_updated %>% mutate(X2.1.Flow.Type = ifelse(X2.1.Flow.Type=="Trade (transport of goods and services)","Trade",X2.1.Flow.Type))
levels(factor(df4_updated$X2.1.Flow.Type))
list(unique(df4_updated$X2.2.Subtype))
write.csv(df4_updated, 'data/004_output_Reclassified.csv')
