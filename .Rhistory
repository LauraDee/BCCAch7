data <- expand.grid(X= driver_flow_impact$driver, Y= driver_flow_impact$altered_flow)
rm(list=ls())
graphics.off()
#Figures of drivers by flow and impacts and NCP
#load libraries
library(ggplot2)
library(tidyverse)
library(forcats)
library(ggalluvial)
library(dplyr)
library(plyr)
library(cowplot)
library(data.table)
"%notin%" <- Negate("%in%")
setwd("/Users/lade8828/Library/CloudStorage/OneDrive-UCB-O365/Documents/GitHub/BCCAch7/")
reshaped_data <- fread("data/008_preppedata_forsynthesis.csv")
impact.group <- fread("data/data_cleaning/impact_group.csv")
## reshape data
driver_data = melt(reshaped_data,
id.vars=c("ID_DOI_by_Flow", "X2.1.Flow.Type", "X2.2.Subtype","DOI"),
measure.vars = patterns(driver="^driver."),
variable.name = "driver")[value==TRUE,][,value:=NULL][,driver:=gsub(pattern="^driver.(*)", replacement="\\1",driver)]
impact_data = melt(reshaped_data,
id.vars=c("ID_DOI_by_Flow","X2.1.Flow.Type", "X2.2.Subtype","DOI"),
measure.vars = patterns(driver="^X2.12.Impact"),
variable.name = "impact",
value.name="direction")[direction!="",][,impact:=gsub(pattern="^X2.12.Impact..(*)", replacement="\\1",impact)]
#condense and clean
impact_data = impact_data[impact != "None"]
impact_data = impact_data[direction != 'No direction mentioned']
#merge with the groupings for which direction "we want" for impact
impact_data = merge(impact_data,
impact.group,
by="impact",
allow.cartesian=TRUE)
#change names
impact_data = impact_data[impact =="Indigenous.Knowledge", impact := "Indigenous Knowledge"]
impact_data = impact_data[impact =="Land.Use.Restore", impact := "Habitat Restoration"]
impact_data = impact_data[impact =="Land.Use.Loss", impact := "Habitat Loss"]
## combined datasets
driver_impact_data = merge(driver_data,
impact_data,
by= c("ID_DOI_by_Flow","X2.1.Flow.Type", "X2.2.Subtype","DOI"),  #"ID_DOI_by_Flow",
allow.cartesian=TRUE)
#condense and clean
driver_impact_data = driver_impact_data[direction != 'No direction mentioned']
driver_impact_data = driver_impact_data[impact != "None"]
# data on altered flow
altered_flow_data =  melt(reshaped_data,
id.vars=c("ID_DOI_by_Flow","X2.1.Flow.Type", "X2.2.Subtype","DOI"),
measure.vars = patterns(driver="^X2.7.Altered.Flow.."),
variable.name = "altered_flow",
value.name="alteration")[alteration!="",][,altered_flow:=gsub(pattern="^X2.7.Altered.Flow..(*)", replacement="\\1",altered_flow)]
#view the data
table(altered_flow_data$altered_flow)
table(altered_flow_data$alteration)
driver_flow_impact = merge(driver_impact_data,
altered_flow_data,
by= c("ID_DOI_by_Flow","X2.1.Flow.Type", "X2.2.Subtype","DOI"), #"ID_DOI_by_Flow",
allow.cartesian=TRUE)
#NCP data
NCP_data = melt(reshaped_data,
id.vars=c("ID_DOI_by_Flow","X2.1.Flow.Type", "X2.2.Subtype","DOI"),
measure.vars = patterns(driver="^X2.16.NCP.ES.."),
variable.name = "ncp",
value.name="ncp_direction")[ncp_direction!="",][,ncp:=gsub(pattern="^X2.16.NCP.ES..(*)", replacement="\\1",ncp)]
NCP_data = NCP_data[ncp != "None"]
NCP_data = NCP_data[ncp_direction != "No direction mentioned"]
#combine driver impact and NCP data
driver_impact_ncp = merge(driver_impact_data,
NCP_data,
by= c("ID_DOI_by_Flow","X2.1.Flow.Type", "X2.2.Subtype","DOI"),
allow.cartesian=TRUE)
table(driver_impact_ncp$ncp_direction)
#Human well-being dataset
hwb_data = melt(reshaped_data,
id.vars=c("ID_DOI_by_Flow","X2.1.Flow.Type", "X2.2.Subtype","DOI"),
measure.vars = patterns(driver="^X2.20.Well.being...."),
variable.name = "hwb",
value.name="hwb_direction")[hwb_direction!="",][,hwb:=gsub(pattern="^X2.20.Well.being..(*)", replacement="\\1",hwb)]
hwb_data = hwb_data[hwb_direction != 'No direction mentioned']
hwb_data = hwb_data[hwb != 'None']
#combine driver impact and hwb data
driver_impact_hwb = merge(driver_impact_data,
hwb_data,
by= c("ID_DOI_by_Flow","X2.1.Flow.Type", "X2.2.Subtype","DOI"),
allow.cartesian=TRUE)
data <- expand.grid(X= driver_flow_impact$driver, Y= driver_flow_impact$altered_flow)
head(data)
all.possible = data
all.possible <- all.possible[all.possible[, 1] != all.possible[, 2], ]
all.possible2 <- unique(apply(all.possible, 1, function(x) paste(sort(x), collapse='-')))
h_s = data %>%
group_by(X,Y) %>%
summarise(count=n())
h_s = data %>%
filter(group_by(X,Y) %>%
summarise(count=n()))
freqs <- apply(data, 1, function(C) {
sum(apply(data[,-1], 1, function(a) all(C %in% a, na.rm = TRUE)))
})
df = table(apply(data,1,function(x) paste(sort(x),collapse='-')))
